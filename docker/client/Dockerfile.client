FROM ubuntu:20.04

RUN apt-get update -y
RUN apt-get upgrade -y
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get install -y git
RUN apt-get install -y python3
RUN apt-get install -y python3-pip
RUN apt-get install -y python3-opencv
RUN apt-get install -y unzip
RUN apt-get install -y tar

WORKDIR /app
COPY . .
RUN python3 -m pip install --no-cache-dir -r requirements.txt

RUN unzip data/WIDER_FACE/WIDER_train.zip -d data/ && mv data/WIDER_train/images data/WIDER_FACE  && rm -rf data/WIDER_train && rm data/WIDER_FACE/WIDER_train.zip
RUN tar xvf data/WIDER_FACE/annotations.tar.gz -C data/WIDER_FACE/  && rm data/WIDER_FACE/annotations.tar.gz
RUN unzip data/AFW/afw_images.zip -d data/ && mv data/afw_images data/AFW && rm -rf data/afw_images && rm data/AFW/afw_images.zip
RUN unzip data/PASCAL/pascal_images.zip -d data/ && mv data/pascal_images data/PASCAL && rm -rf data/pascal_images && rm data/PASCAL/pascal_images.zip
RUN unzip data/FDDB/fddb_images.zip -d data/ && mv data/fddb_images data/FDDB && rm -rf data/fddb_images && rm data/FDDB/fddb_images.zip


COPY docker/client/start_flower_client.sh /usr/local/bin/start_flower_client.sh
RUN chmod +x /usr/local/bin/start_flower_client.sh

ENV PARTITION_ID=0
ENV NUM_PARTITIONS=2
ENV USE_CUDA=0
ENV SERVER_ADDRESS=0.0.0.0:8080
ENV DATA_DIR=./data/WIDER_FACE
ENV IMG_DIM=1024
ENV NUM_CLASSES=2
ENV BATCH_SIZE=32
ENV VALIDATION_SPLIT=0.1
ENV TEST_SPLIT=0.1
ENV WEIGHTS_DIR=./weights

CMD ["/bin/sh", "/usr/local/bin/start_flower_client.sh"]

# docker run -e SERVER_ADDRESS=172.30.96.1:8080 -e NUM_PARTITIONS=2 -e PARTITION_ID=0 -it flwr_client:0.0.2
